Turbo Assembler	 Version 4.1	    03/01/20 19:02:33	    Page 1
inter.asm



      1	0000			     .model tiny
      2	0000			     .code
      3				     org 100h
      4				     locals @@
      5	0100			     start:
      6	0100  33 C0				     xor ax, ax
      7	0102  8E C0				     mov es, ax
      8
      9	0104  BB 0020				     mov bx, 8*4
     10	0107  26: 8B 07				     mov ax, es:[bx]
     11	010A  A3 0189r				     mov old09h, ax
     12	010D  26: 8B 47	02			     mov ax, es:[bx+2]
     13	0111  A3 018Br				     mov old09h	+ 2, ax
     14
     15
     16	0114  8C C8				     mov ax, cs
     17
     18	0116  FA				     cli	     ; in this place disable interrupt
     19
     20	0117  26: C7 07	0131r			     mov word ptr es:[bx], offset new09h
     21	011C  26: 89 47	02			     mov word ptr es:[bx+2], ax
     22
     23	0120  FB				     sti	     ; return flag interrpur
     24
     25	0121  B4 31				     mov ah, 31h
     26	0123  BA 02BDr				     mov dx, offset theend
     27	0126  D1 EA D1 EA D1 EA	D1+		     shr dx, 4
     28	      EA
     29	012E  42				     inc dx
     30	012F  CD 21				     int 21h
     31
     32	0131			     new09h	     proc
     33	0131  50 57 56 06			     push ax di	si es
     34	0135  BF B800				     mov di, 0b800h
     35	0138  8E C7				     mov es, di
     36
     37	013A  53 51 52				     push bx cx	dx
     38						     ;--------------------------------------------
     39	013D  B5 0A				     mov ch, 10	     ; vertical	position
     40	013F  B1 05				     mov cl, 5	     ; gorizontal position
     41
     42	0141  B6 0F				     mov dh, 15	     ; end vertical position
     43	0143  B2 3C				     mov dl, 60	     ; end gorizontal position
     44	0145  2A F5				     sub dh, ch
     45	0147  2A D1				     sub dl, cl
     46
     47	0149  E8 0053				     call calculation_bx_pointer
     48	014C  E8 0060				     call draw_frame
     49	014F  E8 00BD				     call draw_shadows
     50	0152  E8 0102				     call draw_angle
     51						     ;---------------------------------------------
     52
     53	0155  E8 0126				     call calc_point
     54	0158  8B F7				     mov si, di
     55	015A  E4 60				     in	al, 60h
     56	015C  B4 4E				     mov ah, 4eh
     57
Turbo Assembler	 Version 4.1	    03/01/20 19:02:33	    Page 2
inter.asm



     58						     ;---------------------------------------------
     59	015E  BF 018Er				     mov di, offset free_str
     60	0161  32 E4				     xor ah, ah
     61	0163  E8 012D				     call write_num
     62	0166  BB B800 90			     mov bx, video_segment
     63	016A  8E C3				     mov es, bx
     64
     65	016C  8B FE				     mov di, si
     66	016E  BE 018Er				     mov si, offset free_str
     67	0171  8A 14				     mov dl, byte ptr ds:[si]
     68	0173  26: 88 15				     mov byte ptr es:[di], dl
     69
     70
     71	0176  A4				     movsb
     72	0177  47				     inc di
     73	0178  A4				     movsb
     74	0179  47				     inc di
     75	017A  A4				     movsb
     76
     77	017B  83 EE 03				     sub si, 3
     78	017E  83 EF 05				     sub di, 5
     79						     ;--------------------------------------------
     80
     81
     82
     83					     comment &
     84						     mov ah, 02h
     85						     mov bh, 0
     86						     mov dh, ch
     87						     inc dh
     88
     89						     mov dl, cl
     90						     inc dl
     91						     int 21h
     92
     93						     mov dx, offset free_str
     94						     mov ah, 09h
     95						     int 21h
     96					     &
     97
     98	0181  5A 59 5B				     pop dx cx bx
     99
    100	0184  07 5E 5F 58			     pop es si di ax
    101	0188  EA				     db	0eah
    102
    103	0189  0000		     old09h	     dw	0
    104	018B  0000				     dw	0
    105
    106	018D  CF				     iret
    107
    108	018E					     endp
    109
    110	018E  20 20 20 20 20 20	20+  free_str:	     db	'		  '
    111	      20 20 20 20 20 20	20+
    112	      20 20 20
    113				     ;-----------------------------------------------
    114				     include frame.asm
Turbo Assembler	 Version 4.1	    03/01/20 19:02:33	    Page 3
inter.asm



1   115				     include func.asm
2   116	      =0010		     color_shadows	     equ     00010000b
2   117	      =B800		     video_segment	     equ     0b800h
2   118	      =0030		     color_background	     equ     00110000b
2   119
2   120
2   121				     ;--------------------------------------------------------
2   122				     ;	     Stop a program befor presing a key
2   123				     ;	     Destr:  AX
2   124				     ;--------------------------------------------------------
2   125				     .getch	     macro
2   126						     nop
2   127						     xor ah, ah
2   128						     int 16h
2   129						     nop
2   130						     endm
2   131
2   132
2   133				     ;--------------------------------------------------------
2   134				     ;	     Draw background of	position cursor
2   135				     ;	     Entry:  BX	     address of	cursor on screen
2   136				     ;			     startiong out from
2   137				     ;--------------------------------------------------------
2   138				     .draw_background	     macro
2   139						     inc bx
2   140						     mov byte ptr es:[bx], color_background
2   141						     dec bx
2   142						     endm
2   143
2   144
2   145				     ;--------------------------------------------------------
2   146				     ;	     Move the cursor form the top line to bottom line
2   147				     ;	     with old gorizontal position
2   148				     ;	     Entry:  BX	     cursor position
2   149				     ;		     CH	     number of lines in	frame
2   150				     ;--------------------------------------------------------
2   151				     ;	     Ret:    AX	     number symbols between
2   152				     ;			     top and bottom line
2   153				     ;		     BX
2   154				     ;--------------------------------------------------------
2   155				     .offset_height  macro
2   156						     mov al, 160
2   157						     mul dh
2   158						     sub bx, ax
2   159						     endm
2   160
2   161
2   162				     ;--------------------------------------------------------
2   163				     ;	     Move the cursor form the right side to left side
2   164				     ;	     with old gorizontal position
2   165				     ;	     Entry:  BX	     cursor position
2   166				     ;		     CH	     number of lines in	frame
2   167				     ;--------------------------------------------------------
2   168				     ;	     Ret:    AX	     number symbols between
2   169				     ;			     left and right side
2   170				     ;--------------------------------------------------------
2   171				     .offset_width   macro
Turbo Assembler	 Version 4.1	    03/01/20 19:02:33	    Page 4
inter.asm



2   172						     mov al, dl
2   173						     mov ah, 0
2   174						     shl ax, 1
2   175						     sub bx, ax
2   176						     endm
2   177
1   178				     ;--------------------------------------------------------
1   179				     ;	     Calculation address position on screen of top
1   180				     ;	     left angle	starting out from ES
1   181				     ;	     Entry:  CH	     number of lines in	frame
1   182				     ;		     CL	     number of column in frame
1   183				     ;--------------------------------------------------------
1   184				     ;	     Destr:  AX
1   185				     ;--------------------------------------------------------
1   186				     ;	     Ret:    BX	     address position on screen	of top
1   187				     ;			     left angle	starting out from reg ES
1   188				     ;--------------------------------------------------------
1   189	019F				     calculation_bx_pointer proc
1   190	019F  B8 0050				     mov ax, 80
1   191	01A2  F6 E5				     mul ch
1   192
1   193	01A4  8B D8				     mov bx, ax
1   194	01A6  33 C0				     xor ax, ax
1   195	01A8  8A C1				     mov al, cl
1   196	01AA  03 D8				     add bx, ax
1   197
1   198	01AC  D1 E3				     shl bx, 1
1   199
1   200	01AE  C3				     ret
1   201	01AF				     calculation_bx_pointer endp
1   202
1   203
1   204				     ;--------------------------------------------------------
1   205				     ;	     Draw frame
1   206				     ;	     Entry:  CH	     vertiacal position	top left angle
1   207				     ;			     of	frame
1   208				     ;		     CL	     vertiacal position	top left angle
1   209				     ;			     of	frame
1   210				     ;		     DH	     height of frame (include bottom line)
1   211				     ;		     DL	     width of frame (include right column)
1   212				     ;
1   213				     ;		     BX	     addr of cusrsor on	screen
1   214				     ;		     ES	     addr of starting video memory
1   215				     ;			     of	console	screen
1   216				     ;--------------------------------------------------------
1   217	01AF				     draw_frame	proc
1   218	01AF  32 E4				     xor ah, ah	     ; byte for	height
1   219	01B1				     @@big_for:
1   220	01B1  32 C0				     xor al, al	     ; byte for	width
1   221
1   222	01B3  3A E6				     cmp ah, dh
1   223	01B5  77 19				     ja	@@end_big_for
1   224
1   225	01B7				     @@small_for:
1   226	01B7  3A C2				     cmp al, dl
1   227	01B9  77 10				     ja	@@end_small_for
1   228
Turbo Assembler	 Version 4.1	    03/01/20 19:02:33	    Page 5
inter.asm



1   229	01BB  E8 0033				     call create_frame
1   230						     .draw_background
2   231	01BE  43				     inc bx
2   232	01BF  26: C6 07	30			     mov byte ptr es:[bx], color_background
2   233	01C3  4B				     dec bx
1   234	01C4  83 C3 02				     add bx, 2
1   235	01C7  FE C0				     inc al
1   236
1   237	01C9  EB EC				     jmp @@small_for
1   238
1   239	01CB				     @@end_small_for:
1   240	01CB  E8 000F				     call newline
1   241	01CE  EB E1				     jmp @@big_for
1   242
1   243	01D0				     @@end_big_for:
1   244	01D0  81 EB 00A0			     sub bx, 160
1   245	01D4  8A C2				     mov al, dl
1   246	01D6  32 E4				     xor ah, ah
1   247	01D8  03 D8				     add bx, ax
1   248	01DA  03 D8				     add bx, ax
1   249	01DC  C3				     ret
1   250	01DD				     draw_frame	endp
1   251
1   252
1   253				     ;--------------------------------------------------------
1   254				     ;	     Go	to newline of frame
1   255				     ;	     Entry:  BX	     addr of cusrsor on	screen
1   256				     ;		     DH	     height of frame (include bottom line)
1   257				     ;		     DL	     width of frame (include right column)
1   258				     ;--------------------------------------------------------
1   259				     ;	     Ret:    BX	     addr of cursor on screen with + 1
1   260				     ;			     vertiacal line and	gorizontal position
1   261				     ;			     of	the top	left angle of frame
1   262				     ;--------------------------------------------------------
1   263	01DD				     newline proc
1   264	01DD  8A C6				     mov al, dh
1   265	01DF  B6 00				     mov dh, 0
1   266
1   267	01E1  2B DA				     sub bx, dx
1   268	01E3  2B DA				     sub bx, dx
1   269	01E5  83 EB 02				     sub bx, 2
1   270
1   271	01E8  8A F0				     mov dh, al
1   272	01EA  81 C3 00A0			     add bx, 80	* 2
1   273	01EE  FE C4				     inc ah
1   274	01F0  C3				     ret
1   275	01F1				     newline endp
1   276
1   277
1   278				     ;--------------------------------------------------------
1   279				     ;	     Draw symbols on screen of frame if	this edge of frame
1   280				     ;	     Entry:  AH	     vertiacal position	cursor from
1   281				     ;			     top left angle of frame
1   282				     ;		     AL	     gorizontal	position cursor	from
1   283				     ;			     top left angle of frame
1   284				     ;--------------------------------------------------------
1   285	01F1				     create_frame proc
Turbo Assembler	 Version 4.1	    03/01/20 19:02:33	    Page 6
inter.asm



1   286	01F1  3C 00				     cmp al, 0
1   287	01F3  74 0E				     je	@@vertical_frame
1   288
1   289	01F5  3A C2				     cmp al, dl
1   290	01F7  74 0A				     je	@@vertical_frame
1   291
1   292	01F9  3A E6				     cmp ah, dh
1   293	01FB  74 0C				     je	@@gorizontal_frame
1   294
1   295	01FD  80 FC 00				     cmp ah, 0
1   296	0200  74 07				     je	@@gorizontal_frame
1   297
1   298
1   299	0202				     @@end_create:
1   300	0202  C3				     ret
1   301
1   302	0203				     @@vertical_frame:
1   303	0203  26: C6 07	BA			     mov byte ptr es:[bx], 186
1   304	0207  EB F9				     jmp @@end_create
1   305
1   306	0209				     @@gorizontal_frame:
1   307	0209  26: C6 07	CD			     mov byte ptr es:[bx], 205
1   308	020D  EB F3				     jmp @@end_create
1   309	020F				     create_frame endp
1   310
1   311
1   312				     ;---------------------------------------------------------------------
1   313				     ;	     Draw all shadows of frame
1   314				     ;	     Entry:  DH	     vertiacal position	of right buttom	angle frame
1   315				     ;			     from position left	top angle
1   316				     ;		     DL	     gorizontal	position of right buttom angle frame
1   317				     ;			     position left top angle
1   318				     ;		     ES	     address of	starting video memory
1   319				     ;			     of	screen
1   320				     ;		     BX	     addr of cusrsor on	screen
1   321				     ;---------------------------------------------------------------------
1   322				     ;	     Destr:  AX
1   323				     ;---------------------------------------------------------------------
1   324	020F				     draw_shadows proc
1   325	020F  B0 A0				     mov al, 160
1   326	0211  F6 E6				     mul dh
1   327	0213  2B D8				     sub bx, ax
1   328	0215  81 C3 00A3			     add bx, 163
1   329	0219  B4 00				     mov ah, 0
1   330
1   331	021B				     @@loop_side:
1   332	021B  3A E6				     cmp ah, dh
1   333	021D  77 13				     ja	@@end_loop_side
1   334
1   335	021F  26: C6 07	10			     mov byte ptr es:[bx], color_shadows
1   336	0223  83 C3 02				     add bx, 2
1   337	0226  26: C6 07	10			     mov byte ptr es:[bx], color_shadows
1   338
1   339	022A  81 C3 009E			     add bx, 158
1   340
1   341	022E  FE C4				     inc ah
1   342	0230  EB E9				     jmp @@loop_side
Turbo Assembler	 Version 4.1	    03/01/20 19:02:33	    Page 7
inter.asm



1   343
1   344	0232				     @@end_loop_side:
1   345	0232  81 EB 00A2			     sub bx, 160 + 2
1   346
1   347	0236  8A C2				     mov al, dl
1   348	0238  02 C2				     add al, dl
1   349	023A  B4 00				     mov ah, 0
1   350	023C  2B D8				     sub bx, ax
1   351	023E  83 C3 04				     add bx, 4
1   352
1   353	0241  B0 02				     mov al, 2
1   354	0243				     @@loop_bottom:
1   355	0243  3A C2				     cmp al, dl
1   356	0245  77 0B				     ja	@@end_loop_bottom
1   357	0247  26: C6 07	10			     mov byte ptr es:[bx], color_shadows
1   358	024B  83 C3 02				     add bx, 2
1   359	024E  FE C0				     inc al
1   360	0250  EB F1				     jmp @@loop_bottom
1   361
1   362	0252				     @@end_loop_bottom:
1   363	0252  81 EB 00A3			     sub bx, 160 + 3
1   364						     ;mov byte ptr es:[bx+1], 52
1   365	0256  C3				     ret
1   366	0257				     draw_shadows endp
1   367
1   368
1   369				     ;--------------------------------------------------------
1   370				     ;	     Draw a angle of frame
1   371				     ;	     Entry:  BX	     adrr of cusrsor on	screen
1   372				     ;		     ES	     address of	starting video memory
1   373				     ;			     of	screen
1   374				     ;--------------------------------------------------------
1   375				     ;	     Destr:  BX	CX
1   376				     ;--------------------------------------------------------
1   377	0257				     draw_angle	proc
1   378						     ;mov cx, dx
1   379	0257  26: C6 07	BC			     mov byte ptr es:[bx], 188	     ; bottom right angle
1   380
1   381						     .offset_height
2   382	025B  B0 A0				     mov al, 160
2   383	025D  F6 E6				     mul dh
2   384	025F  2B D8				     sub bx, ax
1   385	0261  26: C6 07	BB			     mov byte ptr es:[bx], 187	     ; top right angle
1   386	0265  03 D8				     add bx, ax
1   387
1   388						     .offset_width
2   389	0267  8A C2				     mov al, dl
2   390	0269  B4 00				     mov ah, 0
2   391	026B  D1 E0				     shl ax, 1
2   392	026D  2B D8				     sub bx, ax
1   393	026F  26: C6 07	C8			     mov byte ptr es:[bx], 200	     ; bottom left angle
1   394
1   395						     .offset_height
2   396	0273  B0 A0				     mov al, 160
2   397	0275  F6 E6				     mul dh
2   398	0277  2B D8				     sub bx, ax
1   399	0279  26: C6 07	C9			     mov byte ptr es:[bx], 201	     ; top left	angle
Turbo Assembler	 Version 4.1	    03/01/20 19:02:33	    Page 8
inter.asm



1   400	027D  C3				     ret
1   401	027E				     draw_angle	endp
1   402
1   403
1   404				     ;--------------------------------------------------------
1   405
    406				     ;-----------------------------------------------
    407
    408
    409
    410				     ;-----------------------------------------------
    411				     ;	     Calculation point on screen for write
    412				     ;	     symbol from keyboard
    413				     ;-----------------------------------------------
    414				     ;	     Entry:
    415				     ;-----------------------------------------------
    416				     ;	     Ret:    DI	     pointer on	screen
    417				     ;			     (from video segment)
    418				     ;-----------------------------------------------
    419				     ;	     Destr:
    420				     ;-----------------------------------------------
    421	027E			     calc_point	     proc
    422	027E  B0 A0				     mov al, 160
    423	0280  F6 E5				     mul ch
    424	0282  05 00A0				     add ax, 160
    425	0285  8B F8				     mov di, ax
    426	0287  33 C0				     xor ax, ax
    427	0289  8A C1				     mov al, cl
    428	028B  05 0001				     add ax, 1
    429	028E  D1 E0				     shl ax, 1
    430	0290  03 F8				     add di, ax
    431
    432	0292  C3				     ret
    433	0293					     endp
    434				     ;------------------------------------------------
    435				     ;	     Convert number in string with point DI
    436				     ;	     Entry:  DI	     point on space string
    437				     ;		     AX	     number
    438				     ;------------------------------------------------
    439				     ;	     Destr:  SI	DI
    440				     ;------------------------------------------------
    441	0293			     write_num	     proc
    442						     ;mov si, ds
    443						     ;mov es, si
    444
    445	0293  51				     push cx
    446	0294  52				     push dx
    447	0295  B9 0002				     mov cx, 2	     ; 2 - because 2 symbol in hex bytes
    448	0298				     @@la0:
    449	0298  D0 C0 D0 C0 D0 C0	D0+		     rol al, 4
    450	      C0
    451	02A0  8A D0				     mov dl, al
    452	02A2  80 E2 0F				     and dl, 0Fh
    453
    454	02A5  80 FA 09				     cmp dl, 9
    455	02A8  76 03				     jbe @@la1
    456	02AA  80 C2 07				     add dl, 7
Turbo Assembler	 Version 4.1	    03/01/20 19:02:33	    Page 9
inter.asm



    457	02AD  80 C2 30			     @@la1:  add dl, 30h
    458
    459						     ;push ax
    460						     ;mov ah, 02h
    461						     ;int 21h
    462						     ;pop ax
    463
    464	02B0  88 15				     mov ds:[di], dl
    465	02B2  47				     inc di
    466
    467	02B3  E2 E3				     loop @@la0
    468
    469
    470	02B5  B2 68				     mov dl, 'h'
    471	02B7  88 15				     mov ds:[di], dl
    472	02B9  47				     inc di
    473
    474	02BA  5A				     pop dx
    475	02BB  59				     pop cx
    476	02BC  C3				     ret
    477	02BD					     endp
    478	02BD			     theend:
    479				     end	     start
Turbo Assembler	 Version 4.1	    03/01/20 19:02:33	    Page 10
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "03/01/20"
??FILENAME			  Text	 "inter	  "
??TIME				  Text	 "19:02:33"
??VERSION			  Number 040A
@32BIT				  Text	 0
@@BIG_FOR			  Near	 DGROUP:01B1
@@END_BIG_FOR			  Near	 DGROUP:01D0
@@END_CREATE			  Near	 DGROUP:0202
@@END_LOOP_BOTTOM		  Near	 DGROUP:0252
@@END_LOOP_SIDE			  Near	 DGROUP:0232
@@END_SMALL_FOR			  Near	 DGROUP:01CB
@@GORIZONTAL_FRAME		  Near	 DGROUP:0209
@@LA0				  Near	 DGROUP:0298
@@LA1				  Near	 DGROUP:02AD
@@LOOP_BOTTOM			  Near	 DGROUP:0243
@@LOOP_SIDE			  Near	 DGROUP:021B
@@SMALL_FOR			  Near	 DGROUP:01B7
@@VERTICAL_FRAME		  Near	 DGROUP:0203
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 INTER
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
CALCULATION_BX_POINTER		  Near	 DGROUP:019F
CALC_POINT			  Near	 DGROUP:027E
COLOR_BACKGROUND		  Number 0030
COLOR_SHADOWS			  Number 0010
CREATE_FRAME			  Near	 DGROUP:01F1
DRAW_ANGLE			  Near	 DGROUP:0257
DRAW_FRAME			  Near	 DGROUP:01AF
DRAW_SHADOWS			  Near	 DGROUP:020F
FREE_STR			  Near	 DGROUP:018E
NEW09H				  Near	 DGROUP:0131
NEWLINE				  Near	 DGROUP:01DD
OLD09H				  Word	 DGROUP:0189
START				  Near	 DGROUP:0100
THEEND				  Near	 DGROUP:02BD
VIDEO_SEGMENT			  Number B800
WRITE_NUM			  Near	 DGROUP:0293

Macro Name

.DRAW_BACKGROUND
.GETCH
.OFFSET_HEIGHT
.OFFSET_WIDTH
Turbo Assembler	 Version 4.1	    03/01/20 19:02:33	    Page 11
Symbol Table




Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  02BD Word	  Public  CODE
